/* 
  The styles in this file are based on several resources:
  1. Flexbox properties and principles learned from MDN Web Docs: https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox
  2. Conversations and guidance from OpenAI's ChatGPT for responsive design and best practices.
  
  Flexbox was utilized to the header for easier alignment and distribution of elements.
*/
.header {
	position: relative;
	background: #fff;
	padding: 1rem;
	display: flex;
	justify-content: space-between;
	align-items: center;
	font-family: var(--font-tertiary);
}

.header__logo {
	text-align: start;
}	

.header__logo img {
	width: 20vw; /* Logo width is responsive to the viewport width */
	min-width: 100px;
	max-width: 200px;
	height: auto;
}

/* Mobile-first CSS for the search bar */
.header__search {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 0 1em;
    margin-right: 1em;
}

.header__search input[type="search"] {
    width: 100%; /* Full width of its parent .header__search */
    border: 1px solid black;
    border-radius: 4px;
    padding: 1em;
}

.header__search input[type="search"]:focus,
.header__search input[type="search"]:hover {
	border-color: #909090;
}

.search-icon {
   padding: 0.5em;
}

/*
  The visually-hidden class is used to hide elements visually while keeping them accessible to assistive technologies.

  Accessibility concerns:
  - The off-screen content remains in the DOM and the accessibility tree, improving page performance without negatively impacting accessibility.
  - Elements hidden with this class will still appear in the accessibility tree. If you don't want an element to appear in the accessibility tree, use aria-hidden="true".

  References:
  - https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility

  Source:
  - MDN Web Docs
 */
.visually-hidden {
    position: absolute;
    width: 1px; /* The width and height makes the elements very smalls so it's not visible on the screen. */
    height: 1px;
    padding: 0; /* The padding and margin ensures that the element does't take up any additional space. */
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0); /* This property is used for compatibility with older browsers. */
    border: 0;
  }

.header__nav {
	position: absolute;
	top: 100%;
	right: 0;
	display: none;
	background: #fff;
	padding: 1rem;
	z-index: 10;
	text-decoration: underline;
}

.header__nav--active {
	display: flex;
	flex-direction: column;
	cursor: pointer;
 }

ul {
	font-weight: 500;
}

.header__nav .nav__list {
	list-style: none;
	padding: 0;
	margin: 0;
}

.header__nav .nav__item {
	text-align: center;
	padding: var(--gap);
	background-color: #f2f2f2;
}

.header__nav .nav__link {	
	text-decoration: none;
	color: #000;
}

.header__nav .nav__link:hover {
	text-decoration: none;
}

/* Styles for larger screens */
@media (min-width: 1400px) {
	.header__nav {
		position: static; /* It will follow the normal document flow */
		width: auto;  /* The nav will take up only as much width as needed */
		margin-right: 1%;
        display: flex; /* This overrides the display: none; with display: flex; so that the navigation will always be displayed at larger screens. */
	}

	.header__menu-button {
		display: none;
	}

	.header__nav .nav__list {
		display: flex; /* List items will be in a row */
		gap: var(--gap);
	}

	.header__nav .nav__item {
		background-color: var(--color-background);
	}
}