/* 
This is the basic grid layout for the site. It divides the content into 12 equal columns. 
The gap variable can be changed to adjust the space between columns. This structure helps with the design consistency across different parts of the site 
*/
.grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: var(--gap);
    width: 100%;
}

 /* 
 These media queries adapt the base 12-column grid layout to different screen sizes.
 For small screens (up to 767px), the grid will have 2 columns.
 For medium screens (from 768px to 1023px), it will have 3 columns.
 For large screens (1024px and above), it will have 4 columns.
 These media queries ensures that the grid adapts to the screen size, providing a responsive layout.
 */
 @media (max-width: 767px) {
    .grid {
        grid-template-columns: repeat(2, 1fr);
    }
 }

 @media (min-width: 768px) {
    .grid {
        grid-template-columns: repeat(3, 1fr);
    }
 }

 @media (min-width: 1024px) {
    .grid {
        grid-template-columns: repeat(4, 1fr);
    }
 }

 /* 
 Grid column classes for how many columns an element spans 
 */
 .grid__column--1 { grid-column-end: span 1; }
 .grid__column--2 { grid-column-end: span 2; }
 .grid__column--3 { grid-column-end: span 3; }
 .grid__column--4 { grid-column-end: span 4; }
 .grid__column--5 { grid-column-end: span 5; }
 .grid__column--6 { grid-column-end: span 6; }
 .grid__column--7 { grid-column-end: span 7; }
 .grid__column--8 { grid-column-end: span 8; }
 .grid__column--9 { grid-column-end: span 9; }
 .grid__column--10 { grid-column-end: span 10; }
 .grid__column--11 { grid-column-end: span 11; }
 .grid__column--12 { grid-column-end: span 12; }
